{
  "fileName": "SqlInjectionChallenge.jar",
  "findings": [
    {
      "source": {
        "targetName": "@RequestParam String username_reg",
        "targetNo": 1,
        "statement": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) throws Exception {",
        "methodName": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg)",
        "className": "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge",
        "lineNo": 56
      },
      "sink": {
        "targetName": "executeQuery",
        "targetNo": 1,
        "statement": "ResultSet resultSet = statement.executeQuery(checkUserQuery);",
        "methodName": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg)",
        "className": "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge",
        "lineNo": 65
      },
      "intermediateFlows": [
        {
          "statement": "String checkUserQuery = \"select userid from sql_challenge_users where userid = '\" + username_reg + \"'\";",
          "methodName": "public AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg)",
          "className": "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge",
          "lineNo": 63
        }
      ],
      "description": "Webgoat application: Advanced -> SqlInjectionChallenge",
      "isNegative": false,
      "attributes": {
        "SqlInjectionChallenge": true
      }
    }
  ]
}