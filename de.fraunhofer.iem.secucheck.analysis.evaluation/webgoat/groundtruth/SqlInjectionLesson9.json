{
  "fileName": "SqlInjectionLesson9.jar",
  "findings": [
    {
      "source": {
        "targetName": "@RequestParam String name",
        "targetNo": 1,
        "statement": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
        "methodName": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan)",
        "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
        "lineNo": 55
      },
      "sink": {
        "targetName": "executeQuery",
        "targetNo": 1,
        "statement": "ResultSet results = statement.executeQuery(query);",
        "methodName": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan)",
        "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
        "lineNo": 66
      },
      "intermediateFlows": [
        {
          "statement": "return injectableQueryIntegrity(name, auth_tan);",
          "methodName": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan)",
          "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
          "lineNo": 56
        },
        {
          "statement": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
          "methodName": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan)",
          "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
          "lineNo": 59
        },
        {
          "statement": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
          "methodName": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan)",
          "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
          "lineNo": 61
        }
      ],
      "description": "Webgoat application: Introduction -> SqlInjectionLesson9",
      "isNegative": false,
      "attributes": {
        "SqlInjectionLesson9": true
      }
    },
    {
      "source": {
        "targetName": "@RequestParam String auth_tan",
        "targetNo": 1,
        "statement": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {",
        "methodName": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan)",
        "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
        "lineNo": 55
      },
      "sink": {
        "targetName": "executeQuery",
        "targetNo": 1,
        "statement": "ResultSet results = statement.executeQuery(query);",
        "methodName": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan)",
        "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
        "lineNo": 66
      },
      "intermediateFlows": [
        {
          "statement": "return injectableQueryIntegrity(name, auth_tan);",
          "methodName": "public AttackResult completed(@RequestParam String name, @RequestParam String auth_tan)",
          "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
          "lineNo": 56
        },
        {
          "statement": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan) {",
          "methodName": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan)",
          "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
          "lineNo": 59
        },
        {
          "statement": "String query = \"SELECT * FROM employees WHERE last_name = '\" + name + \"' AND auth_tan = '\" + auth_tan + \"'\";",
          "methodName": "protected AttackResult injectableQueryIntegrity(String name, String auth_tan)",
          "className": "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9",
          "lineNo": 61
        }
      ],
      "description": "Webgoat application: Introduction -> SqlInjectionLesson9",
      "isNegative": false,
      "attributes": {
        "SqlInjectionLesson9": true
      }
    }
  ]
}